{{!--  --}}
<div class="flex justify-between items-center p-8">
    <div class="flex gap-8 items-center">
        <!-- Dynamic injection of site logo or title -->
      {{#if @site.logo}}
      <a href="{{@site.url}}"><img src="{{@site.logo}}" alt="Blog Logo" class="invert dark:invert-0" /></a>
    {{else}}
      <div class="text-4xl font-serif">{{@site.title}}</div>
    {{/if}}
        <!--navigation placeholder navigation -->
        <nav>
          {{navigation}}
        </nav>
    </div>
    <div class="flex gap-5 items-center">
        <!-- Search and other elements -->
        <button class="gh-search" data-ghost-search>{{> "icons/search"}}</button>
        <button id="theme-toggle" type="button" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
           <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
           <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
        </button>
        <h2 class="hidden lg:block dark:text-white"><a href="/sign-in">Sign in</a></h2>
        <button type="button" class="py-2 px-6 btn-gradient hidden lg:block">Become member</button>
    </div>
</div>

<script>
  var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
  var themeToggleBtn = document.getElementById('theme-toggle');

  // Function to apply the theme based on the local storage or system preference
  function applyTheme() {
    if (localStorage.getItem('color-theme') === 'dark' || 
        (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
      themeToggleLightIcon.classList.remove('hidden');
      themeToggleDarkIcon.classList.add('hidden');
      localStorage.setItem('color-theme', 'dark'); // Ensures preference is saved if following system preference
    } else {
      document.documentElement.classList.remove('dark');
      themeToggleDarkIcon.classList.remove('hidden');
      themeToggleLightIcon.classList.add('hidden');
      if ('color-theme' in localStorage) { // If preference is explicitly set, maintain it
        localStorage.setItem('color-theme', 'light');
      }
    }
  }

  // Apply theme on page load
  applyTheme();

  // Event listener for the theme toggle button
  themeToggleBtn.addEventListener('click', function() {
    // Toggle the 'dark' class on the documentElement
    document.documentElement.classList.toggle('dark');

    // Update local storage and toggle icons based on the current state
    if (document.documentElement.classList.contains('dark')) {
      localStorage.setItem('color-theme', 'dark');
      themeToggleDarkIcon.classList.add('hidden');
      themeToggleLightIcon.classList.remove('hidden');
    } else {
      localStorage.setItem('color-theme', 'light');
      themeToggleDarkIcon.classList.remove('hidden');
      themeToggleLightIcon.classList.add('hidden');
    }
  });
</script>
