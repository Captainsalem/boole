{{!--  --}}
<div class="flex justify-between items-center p-8">
    <div class="flex gap-8 items-center">
        <!-- Dynamic injection of site logo or title -->
      {{#if @site.logo}}
      <a href="{{@site.url}}"><img src="{{@site.logo}}" alt="Blog Logo" class="invert dark:invert-0" /></a>
    {{else}}
      <div class="text-4xl font-serif">{{@site.title}}</div>
    {{/if}}
        <!--navigation placeholder navigation -->
        <nav>
          {{navigation}}
        </nav>
    </div>
    <div class="flex gap-5 items-center">
        <!-- Search and other elements -->
        <button class="gh-search" data-ghost-search>{{> "icons/search"}}</button>

        
        <button id="theme-toggle" type="button" class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5">
           <svg id="theme-toggle-dark-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
           <svg id="theme-toggle-light-icon" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
        </button>

        
         

    {{!-- hamburgerToggle --}}

        <button id="hamburgerToggle" class="xl:hidden  hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-1"   type="button">
          <svg class="w-9 h-9 dark:invert" viewBox="0 -0.5 25 25" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M5.5 7.75C5.08579 7.75 4.75 8.08579 4.75 8.5C4.75 8.91421 5.08579 9.25 5.5 9.25V7.75ZM19.5 9.25C19.9142 9.25 20.25 8.91421 20.25 8.5C20.25 8.08579 19.9142 7.75 19.5 7.75V9.25ZM5.5 11.75C5.08579 11.75 4.75 12.0858 4.75 12.5C4.75 12.9142 5.08579 13.25 5.5 13.25V11.75ZM17.5 13.25C17.9142 13.25 18.25 12.9142 18.25 12.5C18.25 12.0858 17.9142 11.75 17.5 11.75V13.25ZM5.5 15.75C5.08579 15.75 4.75 16.0858 4.75 16.5C4.75 16.9142 5.08579 17.25 5.5 17.25V15.75ZM12.5 17.25C12.9142 17.25 13.25 16.9142 13.25 16.5C13.25 16.0858 12.9142 15.75 12.5 15.75V17.25ZM5.5 9.25H19.5V7.75H5.5V9.25ZM5.5 13.25H17.5V11.75H5.5V13.25ZM5.5 17.25H12.5V15.75H5.5V17.25Z" fill="#000000"></path> </g></svg>
        </button>
    {{!------------------------------}}



        <h2 class="hidden xl:block dark:text-white"><a href="/sign-in">Sign in</a></h2>
        <button type="button" class="py-2 px-6 btn-gradient hidden xl:block">Become member</button>
    </div>
</div>

{{!-- Mobile NavMenu --}}

          <nav class="px-8 bg-white dark:bg-gray-900 h-screen hidden" id="navbarMenu">
            <hr class="dark:bg-secondary-900 h-0.5 border-0 bg-secondary-200" />
              <ul class="py-8 px-4" role="menu">
                  {{#foreach navigation}}
                      <li class="{{link_class for=(url) class=(concat "nav-" slug)}} py-2" role="menuitem">
                        <a href="{{url absolute="true"}}">{{label}}</a>
                      </li>
                  {{/foreach}}
               </ul>
            <hr class="dark:bg-secondary-900 h-0.5 border-0 bg-secondary-200">
               <div class="flex p-8 gap-5 items-center justify-center">
                  <h2 class="dark:text-white"><a href="/sign-in">Sign in</a></h2>
                  <button type="button" class="py-2 px-6 btn-gradient">Become member</button>
               </div>
          </nav>





<script>
    /****************************Hamburger Menu Toggle*************************************/
  document.addEventListener('DOMContentLoaded', function() {
    const navbarToggle = document.getElementById('hamburgerToggle');
    const navbarMenu = document.getElementById('navbarMenu');

    navbarToggle.addEventListener('click', function() {
        navbarMenu.classList.toggle('hidden');
    });
});

window.addEventListener('resize', function() {
        if (window.innerWidth > 1280) {
            navbarMenu.classList.add('hidden');
        }
    });

  /****************************Dark Theme Toggle*************************************/
  var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
  var themeToggleBtn = document.getElementById('theme-toggle');

  // Function to apply the theme based on the local storage or system preference
  function applyTheme() {
    if (localStorage.getItem('color-theme') === 'dark' || 
        (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
      themeToggleLightIcon.classList.remove('hidden');
      themeToggleDarkIcon.classList.add('hidden');
      localStorage.setItem('color-theme', 'dark'); // Ensures preference is saved if following system preference
    } else {
      document.documentElement.classList.remove('dark');
      themeToggleDarkIcon.classList.remove('hidden');
      themeToggleLightIcon.classList.add('hidden');
      if ('color-theme' in localStorage) { // If preference is explicitly set, maintain it
        localStorage.setItem('color-theme', 'light');
      }
    }
  }

  // Apply theme on page load
  applyTheme();

  // Event listener for the theme toggle button
  themeToggleBtn.addEventListener('click', function() {
    // Toggle the 'dark' class on the documentElement
    document.documentElement.classList.toggle('dark');

    // Update local storage and toggle icons based on the current state
    if (document.documentElement.classList.contains('dark')) {
      localStorage.setItem('color-theme', 'dark');
      themeToggleDarkIcon.classList.add('hidden');
      themeToggleLightIcon.classList.remove('hidden');
    } else {
      localStorage.setItem('color-theme', 'light');
      themeToggleDarkIcon.classList.remove('hidden');
      themeToggleLightIcon.classList.add('hidden');
    }
  });
</script>


